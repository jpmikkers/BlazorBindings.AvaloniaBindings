@using Avalonia.Threading
@using BlazorBindings.AvaloniaBindings.Navigation

@inherits ElementTestBase

@code
{
    int refreshCount = 0;
    bool refreshInvokeStarted = false;

    [AvaloniaTest]
    public async Task InvokeOnRefreshingCallback()
    {
        var refreshAction = async (AC.RefreshRequestedEventArgs e) =>
        {
            refreshInvokeStarted = true;
            await Task.Delay(20);
            refreshCount++;
        };
        Label labelRef = null;

        var refreshView = await Render<AC.RefreshContainer>(
            @<RefreshContainer OnRefreshRequested="e => refreshAction(e)" PullDirection="Avalonia.Input.PullDirection.TopToBottom">
                <ScrollViewer>
                    <StackPanel Orientation="Avalonia.Layout.Orientation.Vertical">
                        <Label @ref="labelRef">@refreshCount</Label>
                    </StackPanel>
                </ScrollViewer>

            </RefreshContainer>);

        Tick();

        refreshView.RequestRefresh();

        Tick();

        Assert.That(refreshInvokeStarted, Is.True);

        Tick();

        await Task.Delay(50);

        Assert.That(refreshCount, Is.EqualTo(1));
        Assert.That(labelRef.NativeControl.Content, Is.EqualTo("1"));
    }

    private void Tick()
    {
        Avalonia.Threading.Dispatcher.UIThread.RunJobs(DispatcherPriority.SystemIdle);
    }
}
